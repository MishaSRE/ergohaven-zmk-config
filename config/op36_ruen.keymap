#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        hmr_150_left: hmr_150_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
            label = "HMR_150_LEFT";
        };

        hmr_150_right: hmr_150_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
            label = "HMR_150_RIGHT";
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp RU_CYRILLIC_HA>;
            key-positions = <6 7>;
            layers = <1>;
        };

        hrdsgn {
            bindings = <&kp RU_CYRILLIC_HARD_SIGN>;
            key-positions = <7 8>;
            layers = <1>;
        };

        cmben {
            bindings = <&layer_en>;
            key-positions = <5 15 6>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <15 5 6>;
            layers = <0>;
        };

        ru_io {
            bindings = <&kp RU_CYRILLIC_IO>;
            key-positions = <3 4>;
            layers = <1>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CLCK>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CLCK>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
  &kp F        &kp D        &kp L                  &kp B          &kp V                          &kp J  &kp G         &kp O                   &kp U        &kp COMMA
  &hml LGUI S  &hml LALT T  &hmr_150_left LSHFT R  &hml LCTRL N   &kp K                          &kp Y  &hmr RCTRL M  &hmr_150_right RSHFT A  &hmr LALT E  &hmr RGUI I
  &kp Z        &kp Q        &kp X                  &kp H          &kp P                          &kp W  &kp C         &kp SQT                 &kp SEMI     &kp DOT
                                                   &kp BACKSPACE  &mo 4  &kp SPACE    &kp ENTER  &mo 2  &kp ESC
            >;
        };

        ru {
            bindings = <
  &kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE         &kp RU_CYRILLIC_U                   &kp RU_CYRILLIC_KA                 &kp RU_CYRILLIC_IE                          &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                 &kp RU_CYRILLIC_SHA                  &kp RU_CYRILLIC_SHCHA     &kp RU_CYRILLIC_ZE
  &hml LGUI RU_CYRILLIC_EF  &hml LALT RU_CYRILLIC_YERU  &hmr_150_left LSHFT RU_CYRILLIC_VE  &hmr_150_left LCTRL RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                          &kp RU_CYRILLIC_ER  &hmr_150_right RCTRL RU_CYRILLIC_O  &hmr_150_right RSHFT RU_CYRILLIC_EL  &hmr LALT RU_CYRILLIC_DE  &hmr RGUI RU_CYRILLIC_ZHE
  &kp RU_CYRILLIC_YA        &kp RU_CYRILLIC_CHE         &kp RU_CYRILLIC_ES                  &kp RU_CYRILLIC_EM                 &kp RU_CYRILLIC_I                           &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN           &kp RU_CYRILLIC_BE                   &kp RU_CYRILLIC_YU        &kp RU_CYRILLIC_E
                                                                                            &kp BACKSPACE                      &mo 4               &kp SPACE    &kp ENTER  &mo 3               &kp ESC
            >;
        };

        sym_en {
            bindings = <
  &kp TILDE       &kp LT          &kp EQUAL                  &kp GT                    &kp EXCLAMATION                    &kp DOLLAR  &kp LBKT                   &kp UNDER                      &kp RBKT        &kp COMMA
  &hml LGUI BSLH  &hml LALT LPAR  &hmr_150_left LSHFT MINUS  &hmr_150_left LCTRL RPAR  &kp PLUS                           &kp PRCNT   &hmr_150_right RCTRL LBRC  &hmr_150_right RSHFT QUESTION  &hmr LALT RBRC  &hmr RGUI COLON
  &kp HASH        &kp STAR        &kp GRAVE                  &kp FSLH                  &kp AMPS                           &kp AT      &kp PIPE                   &kp DOUBLE_QUOTES              &kp SEMI        &kp DOT
                                                             &trans                    &mo 4            &trans    &trans  &none       &trans
            >;
        };

        sym_ru {
            bindings = <
  &kp TILDE               &kp LT          &kp EQUAL                  &kp GT                    &kp EXCLAMATION                    &kp DOLLAR  &kp LBKT                   &kp UNDER                         &kp RBKT                 &kp RU_COMMA
  &hml LGUI RU_BACKSLASH  &hml LALT LPAR  &hmr_150_left LSHFT MINUS  &hmr_150_left LCTRL RPAR  &kp PLUS                           &kp PRCNT   &hmr_150_right RCTRL LBRC  &hmr_150_right RSHFT RU_QUESTION  &hmr RS(RIGHT_ALT) RBRC  &hmr RGUI RU_COLON
  &kp HASH                &kp STAR        &kp GRAVE                  &kp RU_FSLH               &kp AMPS                           &kp AT      &kp PIPE                   &kp RU_DOUBLE_QUOTES              &kp RU_SEMI              &kp RU_DOT
                                                                     &trans                    &mo 4            &trans    &trans  &none       &trans
            >;
        };

        nav {
            bindings = <
  &kp N1    &kp N2    &kp N3     &kp N4          &kp N5                             &kp N6      &kp N7           &kp N8           &kp N9        &kp N0
  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL       &kp F2                             &kp TAB     &hmr RCTRL LEFT  &hmr RSHFT DOWN  &hmr LALT UP  &hmr RGUI RIGHT
  &none     &kp HOME  &kp INS    &bt BT_CLR_ALL  &kp CAPS                           &kp DELETE  &kp TAB          &kp PG_DN        &kp PG_UP     &none
                                 &trans          &none     &trans    &kp LS(ENTER)  &mo 2       &trans
            >;
        };
    };
};
